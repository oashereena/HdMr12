% Cantilever beam with tip point load P, flexural rigidity EI, length l
% y=(Pl^3)/(3EI) modeled as x=k(theta1)(theta2)
% X as tip deflection as measurements, in mm X1,X2, ... observations
% theta1 denote as th1 as P ~ N(10,1) kN, Bounds (9,11)kN
% theta2 denote as th2 as (1/EI) ~ N(0.0007,0.0002) kNm2 , Bounds (0.0006,0.0008)kNm2
% k = (1000/3) =333.3333, with l= 1m, and with adjustments in units made for y to be in mm , included
% symbolic integration x for theta1 and y for theta2
% nrfTHX numerator term of f theta conditioned on X ;drfTHx for denominator
% mDx marginal distribution of theta1 ; mDy marginal distribution of theta2
% xhat estimate of theta1; yhat estimate of theta2
k=1000/3;muth1=10;muth2=0.0007;sigth1=1;sigth2=0.0002;th1min=9;th1max=11;th2min=0.0006;th2max=0.0008;X1=2.9202;
muX=k*muth1*muth2;
sig2X=k^2*((sigth1^2)*(sigth2^2)+(muth1^2)*(sigth2^2)+(sigth1^2)*(muth2^2));
sX=sqrt(sig2X);
mux=muth1;muy=muth2;sx=sigth1;sy=sigth2;xmin=th1min;xmax=th1max;ymin=th2min;ymax=th2max;
syms x y
nrfTHX=exp(-0.5*(((x-mux)/sx)^2+((y-muy)/sy)^2+((X1-k*x*y)/sX)^2);
nrfTHXh=@(x,y) exp(-0.5.*(((x-mux)./sx).^2+((y-muy)./sy).^2+((X1-k*x.*y)./sX).^2);
drfTHX=integral2(nrfTHXh,xmin,xmax,ymin,ymax);
d=1/drfTHX;
fTHX=d*nrfTHX;
mDx=int(fTHX,y,ymin,ymax);
mDy=int(fTHX,x,xmin,xmax);
xhati=int(x*mDx,x,xmin,xmax);
xhat=vpa(xhati,5);
yhati=int(y*mDy,y,ymin,ymax);
yhat=vpa(yhati,5);
th1hat=xhat;th2hat=yhat;
xMSEi=int((x-xhat)^2*mDx,x,xmin,xmax);
xMSE=vpa(xMSEi,5);
yMSEi=int((y-yhat)^2*mDy,y,ymin,ymax);
yMSE=vpa(yMSEi,5);

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%Implemented code lines inMATLAB ie as MATLAB read it
%-0.5/(0.0002*0.0002)=-12500000
%0.5/(0.7094*0.7094) = 0.9935
%xhat commands
int(exp(-12500000*(y-0.0007)^2-0.9935*(2.9202-333.3333*x*y)^2),y,0.0006,0.0008)
x*exp(-0.5*(x-10.0)^2)*ans
int(ans,x,9.0,11.0);
vpa(ans,5);
xhat=ans*4364.5;
%yhat commands
int(exp(-0.5*(x-10)^2-0.9935*(2.9202-333.3333*x*y)^2),x,9.0,11.0)
y*exp(-12500000*(y-0.0007)^2)*ans;
int(ans,y,0.0006,0.0008);
vpa(ans,5);
yhat=ans*4364.5;
%xMSE commands
int(exp(-12500000*(y-0.0007)^2-0.9935*(2.9202-333.3333*x*y)^2),y,0.0006,0.0008);
((x-10.072)^2)*exp(-0.5*(x-10)^2)*ans;
int(ans,x,9,11);
vpa(ans,5);
xMSE=ans*4364.5;
%yMSE commands
int(exp(-0.5*(x-10)^2-0.9935*(2.9202-333.3333*x*y)^2),x,9.0,11.0);
((y-0.00071167)^2)*exp(-12500000*(y-0.0007)^2)*ans;
int(ans,y,0.0006,0.0008);
vpa(ans,5);
yMSE=ans*4364.5;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% integrals evaluated by HDMR 1st order expansion
% reference point around mean (x,y) ~ (10,0.0007)
% Evaluate the double integral denomenator of f theta conditioned on X
Ig=exp(-0.5*((x-10.0)^2+((2.9202-0.2333*x)/0.7095)^2))+exp(-0.5*(((y-0.0007)/0.0002)^2+((2.9202-3333.3333*y)/0.7095)^2))-0.7103;
int(Ig,x,9,11);
int(ans,y,0.0006,0.0008);
dh=1/ans;

% Evaluate f theta1 conditioned on X and theta1hat
%fth1X=dh*int(Ig,y,0.0006,0.0008);
int(Ig,y,0.0006,0.0008)
vpa(int(x*ans,x,9.0,11.0),5);
xhath=dh*ans;

% Evaluate f theta2 conditioned on X and theta2hat
%fth2X=dh*int(Ig,x,9.0,11.0);
int(Ig,x,9.0,11.0);
vpa(int(y*ans,y,0.0006,0.0008),5);
yhath=dh*ans;

% MSE for theta1hath
int(Ig,y,0.0006,0.0008);
vpa(int(((x-10.0827)^2)*ans,x,9.0,11.0),5);
xMSEh=dh*ans;
sqrt(ans)

% MSE for theta2hath
int(Ig,x,9.0,11.0); 
vpa(int(((y-0.0007143)^2)*ans,y,0.0006,0.0008),5);
yMSEh=dh*ans;
sqrt(ans);

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% integrals evaluated by HDMR 1st order expansion Lagrange interpolation
nt=5;xmin=9.0;xmax=11.0;ymin=0.0006;ymax=0.0008;c=[10;0.0007];
xvec=SampOintGenrtr(xmax,xmin,nt);
yvec=SampOintGenrtr(ymax,ymin,nt);
syms x y
g0=gxEval(c);%=0.7103
PHI1=LagrangeInterpolator(xvec,nt,x);
PHI2=LagrangeInterpolator(yvec,nt,y);
g11=Evalgx1var( xvec,c,nt,1,2); %  p=1,variable 1. nv=2, no. of variables  
g12=Evalgx1var( yvec,c,nt,2,2); %  p=2,variable 2. nv=2, no. of variables 
Ih1=sum(g11.*PHI1)+sum(g12.*PHI2)-0.7103;
dr=vpa(int(int(Ih1,x,9.0,11.0),y,0.0006,0.0008),5); %dr_fthx
d=1/dr;
fth1x=int(Ih1,y,0.0006,0.0008); % actual inc *d ,omitted for calc simplicity
fth2x=int(Ih1,x,9.0,11.0);% actual inc *d , omitted for calc simplicity
xhat=d*vpa(int(x*fth1x,x,9.0,11.0),5);
yhat=d*vpa(int(y*fth2x,y,0.0006,0.0008),5);
xMSE=d*vpa(int((x-xhat)^2*fth1x,x,9.0,11.0),5);
yMSE=d*vpa(int((y-yhat)^2*fth2x,y,0.0006,0.0008),5);
xsd=sqrt(xMSE);ysd=sqrt(yMSE);
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% 4 random variables
nv=4;nt=5;xmin=9.0;xmax=11.0;ymin=0.045;ymax=0.055;zmin=9;zmax=11;wmin=4.378;wmax=5.378;c=[10;0.05;10;4.878];k=4/1000;
xvec=SampOintGenrtr(xmax,xmin,nt);yvec=SampOintGenrtr(ymax,ymin,nt);zvec=SampOintGenrtr(zmax,zmin,nt);wvec=SampOintGenrtr(wmax,wmin,nt);
Xv=[xvec yvec zvec wvec];
syms x y z w
g0=gxEval4v(c,k);
for p=1:4
  g1i(:,p)=Evalgx1_4var( Xv(:,p),c,nt,p,nv,k);
end
xsv=sym('xsv',[nv,1]);
xsv(1)=sym(x);xsv(2)=sym(y);xsv(3)=sym(z);xsv(4)=sym(w);
for p=1:nv
 PHIm(:,p)=LagrangeInterpolator(Xv(:,p),nt,xsv(p));
end
gx1a=sum(PHIm.*g1i)-(nv-1)*g0;
intgrd0=gx1a;
intgrin=intgrd0;
for i=1:nv
Ii=int(intgrin,xsv(i),boundMin(i),boundMax(i));
intgrin=Ii;
end
dr=vpa(Ii,5);%dr_fthx
d=1/dr;
fthx4=d*gx1a;
% marginal density functions for each variable fthix4,fthix4M
% parameter estimates thetaHatV, Mean squared errors as MSEthetaV
% theta as (1/parameter value) assumptions - parameter estimates and MSEs (yohat,zohat,wohat) and (yomse,zomse,womse)
for i=1:nv
	xsvdummy=[xsv(1:i-1);xsv(i+1:end)];
	boundMindummy=[boundMin(1:i-1);boundMin(i+1:end)];
	boundMaxdummy=[boundMax(1:i-1);boundMax(i+1:end)];
		for j=1:nv-1
			fthix4=int(Intgrndi,xsvdummy(j),boundMindummy(j),boundMaxdummy(j));
			Intgrndi=fthix4;
		end
	fthix4M(i)=fthix4;
	thetaHatV(i)=vpa(int(xsv(i)*fthix4,xsv(i),boundMin(i),boundMax(i)),5);
	MSEthetaV(i)=vpa(int((xsv(i)-thetaHatV(i))^2*fthix4,xsv(i),boundMin(i),boundMax(i)),5);Intgrndi=fthx4;
end
yohat=1/thetaHatV(2);
zohat=1/thetaHatV(3);
wohat=1/thetaHatV(4);
ysd=sqrt(MSEthetaV(2));zsd=sqrt(MSEthetaV(3));wsd=sqrt(MSEthetaV(4));
y1=ysd+thetaHatV(2);z1=zsd+thetaHatV(3);w1=wsd+thetaHatV(4);
yosd=sqrt((yohat-(1/y1))^2);zosd=sqrt((zohat-(1/z1))^2);wosd=sqrt((wohat-(1/w1))^2);


















